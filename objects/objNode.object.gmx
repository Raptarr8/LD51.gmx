<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprNode</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>spd = random_range(3,5);
hspd = 0;
vspd = 0;
dir = point_direction(x,y,objPlayer.x,objPlayer.y)+irandom_range(-30,30);
active = true;
image_speed = 0;
shootTimer = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(spd &gt; 0)
{
    x += lengthdir_x(spd*global.dt_ratio, dir);
    y += lengthdir_y(spd*global.dt_ratio, dir);
    spd -= 0.125*global.dt_ratio;
}
else
{
    if(active)
    {
        if(x &lt; 0)
        {
            x += global.dt_ratio;
        }
        if(x &gt; view_wview)
        {
            x -= global.dt_ratio;
        }
        if(y &lt; 0)
        {
            y += global.dt_ratio;
        }
        if(y &gt; view_hview-32)
        {
            y -= global.dt_ratio;
        }
        if(place_meeting(x,y,objSlash))
        {
            active = 0;
            image_index = 1;
            var sound = audio_play_sound(sfxHit,0.2,false);
                audio_sound_pitch(sound,random_range(0.8,1.2));
            for(var i = 0; i &lt;= 1; i++)
            {
                var j = instance_create(x,y,objEnemyGibs);
                j.hspd = hspd * random_range(0.7,1.3);
                j.image_index = irandom(6);
                j.vspd = vspd * random_range(0.7,1.3) - 1 + i*2;
            }
            var kill = 1;
            for(var i = 0; i &lt; instance_number(objNode); i++)
            {
                if(instance_find(objNode,i).active)
                    kill = 0;
            }
            if(kill)
            {
                with(objNode)
                {
                    for(var i = 0; i &lt;= 1; i++)
                    {
                        var j = instance_create(x,y,objEnemyGibs);
                        j.hspd = hspd * random_range(0.7,1.3);
                        j.image_index = i;
                        j.vspd = vspd * random_range(0.7,1.3) - 1 + i*2;
                    }  
                    instance_destroy();                  
                }
            }
        }
        shootTimer+=global.dt_ratio;
        if(shootTimer &gt; 90)
        {
            var target = instance_find(objNode,irandom(instance_number(objNode)-1))
            if(instance_exists(target))
            {
                if(target!=self)
                {
                    var i = instance_create(x,y,objNodeBullet);
                        i.spd = 3;
                        i.parent = self;
                        i.dir = point_direction(x,y,target.x,target.y);
                    var sound = audio_play_sound(sfxShoot,0.2,false);
                        audio_sound_pitch(sound,random_range(0.8,1.2));
                }
            }
            shootTimer = 0;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(spd &lt;= 0)
{
    draw_set_color($1e0531);
    with(objNode)
    {
        draw_line(x,y,other.x,other.y);
    }
    draw_set_color(c_white);
}
draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
