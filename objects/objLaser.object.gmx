<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprLaser</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xEnd = 0;
yEnd = 0;
laserLength = 0;
parent = noone;
spawnTimer = 20;
lifeTime = 60;
sound = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!instance_exists(parent)){
    instance_destroy();
    exit;
}
x = parent.x
y = parent.y
var maxLength = 600;
for(i = 0; i &lt; maxLength; i++)
{
    xEnd = x + lengthdir_x(i,direction);
    yEnd = y + lengthdir_y(i,direction);
    laserLength = i;
}
if(spawnTimer &gt; 0){
    spawnTimer-=global.dt_ratio;
    if(spawnTimer &lt;= 0)
        sound = audio_play_sound(sfxShoot,0.2,true);
}
else
{
    lifeTime -= global.dt_ratio;
    if(audio_exists(sound))
        audio_sound_pitch(sound,0.5+lifeTime/10);
    if(lifeTime &lt; 0)
    {   
        if(audio_exists(sound))
            audio_stop_sound(sound);
        instance_destroy();
    }
}
if(collision_line(x,y,xEnd,yEnd,objPlayer,0,0) &amp;&amp; spawnTimer &lt;= 0){
    with(objPlayer){
        with(objMusicControl)
        {
            audio_sound_gain(bgmStage, 0, 0);
            audio_sound_gain(bgmStageHurt, 1, 0);
        }
        if(shieldCooldown &lt;= 0)
        {
            iFrames = 60;
            shieldCooldown = 600;
            audio_play_sound(hurtSFX[irandom(4)],1,0);
        }
        else
        {
            show_debug_message("die.");
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for(i=0;i&lt;laserLength;i++)
{
    draw_sprite_ext(sprite_index,0,x+lengthdir_x(i,direction),y+lengthdir_y(i,direction),1,1/clamp(spawnTimer,1,100),direction,c_white,1)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
