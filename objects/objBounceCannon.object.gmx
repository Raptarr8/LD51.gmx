<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBounceCannon</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>prtEnemy</parentName>
  <maskName>sprPlayerHitbox</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vspd = random_range(-0.5,0.5);
spd = random_range(1,2);
image_speed = 0.125;
healthpoints = 3;
hspd = 0;
shotTimer = 0;
starTimer = 0;
canHit = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hspd = spd;
if(y &gt;= view_hview-40)
{
    vspd = -abs(vspd);
}
else
{
    vspd += 0.125;
}
if(place_meeting(x,y,objSlash) &amp;&amp; canHit)
{
    healthpoints--;
    canHit = false;
    if(healthpoints == 0)
    {
        instance_destroy();
    }
    spd *= -1.25;
    var sound = audio_play_sound(sfxHit,0.2,false);
        audio_sound_pitch(sound,random_range(0.8,1.2));
    for(var i = 0; i &lt;= 1; i++)
    {
        var j = instance_create(x,y,objEnemyGibs);
        j.hspd = hspd * random_range(0.7,1.3);
        j.image_index = irandom(6);
        j.vspd = vspd * random_range(0.7,1.3) - 1 + i*2;
    }
}

if (x &lt; view_xview) 
{
    spd = abs(spd);
    canHit = true;
}
if(x &gt; view_wview)
{
    spd = abs(spd)*-1;
    canHit = true;
}
if(bbox_left &lt; 8 || (bbox_right &gt; view_wview-8 &amp;&amp; healthpoints != 3))
{
    shotTimer+=global.dt_ratio;
    if(shotTimer &gt;= 1)
    {
        shotTimer = 0;
        var i = instance_create(x+lengthdir_x(16,point_direction(x,y,objPlayer.x,objPlayer.y)),y+lengthdir_y(16,point_direction(x,y,objPlayer.x,objPlayer.y)),objEnemyBullet);
            i.dir = point_direction(x,y,objPlayer.x,objPlayer.y)+irandom_range(-15,15);
            i.spd = irandom_range(3,5);
        var sound = audio_play_sound(sfxShoot,0.1,false);
            audio_sound_pitch(sound,random_range(0.8,1.2));
    }
}

// actual movement
x += hspd * global.dt_ratio;
y += vspd * global.dt_ratio;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
draw_sprite_ext(sprBounceCannonCannon, 0, x, y, image_xscale, image_yscale, point_direction(x,y,objPlayer.x,objPlayer.y),image_blend,image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
